<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAA
        AAAAAAAGAAAAUAAAAFgAAABWAAAAVgAAAFYAAABWAAAAWAAAAFAAAAAGAAAAAQAAAAEAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAQAAAAWAAAAAAAAABQAAADtAAAA/wAAAP4AAAD/AAAA/wAAAP4AAAD/AAAA7QAAABQAAAAAAAAAHgAA
        AAYAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAAAAAAAcAAAAO8AAAApAAAACgAAAO0AAAD/AAAA/AAAAP8AAAD/AAAA/AAAAP8AAADtAAAACQAA
        ADQAAAD5AAAAgAAAAAAAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAFAAAAAAAAAGoAAAD/AAAA/wAAAOQAAABAAAAA5AAAAP8AAADFAAAATgAAAE4AAADHAAAA/wAA
        AOMAAABLAAAA7AAAAP8AAAD/AAAAfQAAAAAAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        gCXSAABL6QAAl/QgBC/6AABf/S/0v/+gBf8=
</value>
  </data>
</root>